// =============================================================================
// Button
// =============================================================================


// Add color styles to a button.
//
// @param {map} $options
// @prop {color} $options.background-color [#fff]
// @prop {color} $options.background-color-hover [#ededed]
// @prop {color} $options.background-color-active [#e0e0e0]
// @prop {color} $options.border-color [transparent]
// @prop {color} $options.border-color-hover [transparent]
// @prop {color} $options.border-color-active [transparent]
// @prop {color} $options.text-color [rgba(#000, 0.7)]
// @prop {color} $options.text-color-hover [rgba(#000, 0.7)]

@mixin button($options: ()) {
    $bg-color: map-get($options, background-color) or #fff;

    $bg-luminance: luminance($bg-color);

    $bg-color-hover: if($bg-luminance < 0.15,
        scale-color($bg-color, $lightness: 10%),
        scale-color($bg-color, $lightness: -8%)
    );

    $bg-color-active: if($bg-luminance < 0.15,
        scale-color($bg-color, $lightness: 15%),
        scale-color($bg-color, $lightness: -12%)
    );

    $props: map-merge((
            background-color: $bg-color,
            background-color-hover: if($bg-color == transparent, $bg-color, $bg-color-hover),
            background-color-active: if($bg-color == transparent, $bg-color, $bg-color-active),
            border-color: transparent,
            border-color-hover: map-get($options, border-color) or transparent,
            border-color-active: map-get($options, border-color) or transparent,
            text-color: best-color-contrast($bg-color, (#fff, rgba(#000, 0.7))),
            text-color-hover: null
        ), $options
    );

    background-color: map-get($props, background-color);
    border: 1px solid map-get($props, border-color);
    color: map-get($props, text-color);
    transition: background-color 150ms ease-out, border-color 150ms ease-out, color 150ms ease-out;

    &:focus,
    &:hover,
    &:active {
        color: map-get($props, text-color-hover) or map-get($props, text-color);
        text-decoration: none;
    }

    &:focus,
    &:hover {
        background-color: map-get($props, background-color-hover);
        border-color: map-get($props, border-color-hover);
    }

    &:active {
        background-color: map-get($props, background-color-active);
        border-color: map-get($props, border-color-active);
    }

    &:disabled:focus,
    &:disabled:hover,
    &:disabled:active {
        background-color: map-get($props, background-color);
        border-color: map-get($props, border-color);
        color: map-get($props, text-color);
    }

    &.btn--loading::after {
        border-right-color: map-get($props, text-color);
        border-top-color: map-get($props, text-color);
    }
}


// Add color styles to an outlined button.
//
// @param {map} $options
// @prop {color} $options.background-color [transparent]
// @prop {color} $options.background-color-hover [$color-primary]
// @prop {color} $options.background-color-active [#643599]
// @prop {color} $options.border-color [$color-primary]
// @prop {color} $options.border-color-hover [$color-primary]
// @prop {color} $options.border-color-active [$color-primary]
// @prop {color} $options.text-color [$color-primary]
// @prop {color} $options.text-color-hover [#fff]

@mixin button-outline($options: ()) {
    $text-color: map-get($options, text-color) or $color-primary;

    $text-color-hover: map-get($options, text-color-hover) or best-color-contrast($text-color, (rgba(#000, 0.8), #fff));

    $bg-color-active: if(luminance($text-color) < 0.15,
        scale-color($text-color, $lightness: 15%),
        scale-color($text-color, $lightness: -12%)
    );

    $props: map-merge((
            background-color: transparent,
            background-color-hover: $text-color,
            background-color-active: $bg-color-active,
            border-color: $text-color,
            text-color: $text-color,
            text-color-hover: $text-color-hover
        ), $options
    );

    @include button($props);
}
